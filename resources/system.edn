;; Copyright (C) 2022-2023 Magenta Health Inc. and Carmen La

;; This file is part of the DFD Story Discovery Tool.

;; The DFD Story Discovery Tool is free software: you can redistribute it 
;; and/or modify it under the terms of the GNU Affero General Public License as
;; published by the Free Software Foundation, either version 3 of the
;; License, or (at your option) any later version.

;; The DFD Story Discovery Tool is distributed in the hope that it will be 
;; useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU Affero General Public License for more details.

;; You should have received a copy of the GNU Affero General Public License
;; along with the DFD Story Discovery Tool.
;; If not, see <https://www.gnu.org/licenses/>.

{:system/env
 #profile {:dev  :dev
           :test :test
           :prod :prod}

 :nrepl/server
 {:port 7000
  :bind "127.0.0.1"}

 :server/http
 {:port    3000
  :host    "0.0.0.0"
  :handler #ig/ref :handler/ring}

 :handler/ring
 {:router               #ig/ref :router/core
  :api-path             "/api"
  :cookie-secret        #or [#env COOKIE_SECRET "EMULQBNEJWWEZKFX"]
  ;; from ring.middleware.defaults. anti-forgery `false` by default because services may not require it
  :site-defaults-config {:params    {:urlencoded true
                                     :multipart  true
                                     :nested     true
                                     :keywordize true}
                         :cookies   true
                         :session   {:flash        true
                                     :cookie-name  "dfd.story-discovery"
                                     :cookie-attrs {:max-age   86400
                                                    :http-only true
                                                    :same-site :strict}}
                         :security  {:anti-forgery         false
                                     :xss-protection       {:enable? true,
                                                            :mode    :block}
                                     :frame-options        :sameorigin
                                     :content-type-options :nosniff}
                         :static    {:resources "public"}
                         :responses {:not-modified-responses true
                                     :absolute-redirects     true
                                     :content-types          true
                                     :default-charset        "utf-8"}}}

 :reitit.routes/api
 {:base-path "/api"
  :env       #ig/ref :system/env
  :query-fn  #ig/ref :db.sql/query-fn
  :snip-fn   #ig/ref :db.sql/snip-fn}

 :router/routes
 {:routes #ig/refset :reitit/routes}

 :router/core
 {:routes #ig/ref :router/routes
  :cors-methods [:get :post]}


 :db.sql/query-fn
 {:conn     #ig/ref :db.sql/connection,
  :options  {},
  :filename "sql/queries.sql"}

 :db.sql/snip-fn
 {:conn     #ig/ref :db.sql/connection,
  :options  {},
  :filename "sql/queries.sql"}

 :db.sql/migrations
 #profile {:dev  {:store            :database,
                  :db               {:datasource #ig/ref :db.sql/connection},
                  :migrate-on-init? true
                  :properties       {:map {:data {:stories  #join [#env PWD "/search_data/stories.csv"]
                                                  :triggers #join [#env PWD "/search_data/triggers.csv"]
                                                  :synonyms #join [#env PWD "/search_data/synonyms.csv"]}}}}
           :test {:store            :database,
                  :db               {:datasource #ig/ref :db.sql/connection},
                  :migrate-on-init? true
                  :properties       {:map {:data {:stories  #join [#env PWD "/search_data/stories.csv"]
                                                  :triggers #join [#env PWD "/search_data/triggers.csv"]
                                                  :synonyms #join [#env PWD "/search_data/synonyms.csv"]}}}}
           :prod {:store            :database,
                  :db               {:datasource #ig/ref :db.sql/connection},
                  :migrate-on-init? true
                  :properties       {:map {:data {:stories  "/search_data/stories.csv"
                                                  :triggers "/search_data/triggers.csv"
                                                  :synonyms "/search_data/synonyms.csv"}}}}}

 :db.sql/connection
 #profile {:dev  {:jdbc-url "jdbc:postgresql://localhost:5432/dfd?user=dfd&password=dfd"},
           :test {:jdbc-url "jdbc:postgresql://localhost:5432/dfd?user=dfd&password=dfd"},
           :prod #include "/app/.db-connection.edn"}}
